#define _CRT_SECURE_NO_WARNINGS 1
#include "stdio.h"
#include "stdlib.h"
void sort(){
	int arr[5] = { 1, 3, 4, 5, 6 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int *left = arr;   //将数组首元素的地址传入 left
	int *right = arr + sz - 1;		//将数组尾元素地址传入 right
	int temp = 0;
	while (left < right){
		while ((left < right) && (*left) % 2 != 0){      //寻找左侧第一位 偶数
			left++;
		}
		while ((left < right) && (*right) % 2 == 0){		//寻找右侧第一位 奇数
			right--;
		}
		if (left < right){   //交换两个数
			temp = *left;
			*left = *right;
			*right = temp;
		}
	}
	for (int i = 0; i < sz; i++){
		printf("%d", arr[i]);
	}
}

int main(){
	/*
		//杨氏矩阵
		有一个二维数组.
		数组的每行从左到右是递增的，每列从上到下是递增的.
		在这样的数组中查找一个数字是否存在
	*/

	int input=0;
	int arr[3][3] = { 1, 2, 3, 2, 4, 5, 6, 7, 8 };
	int sz = sizeof(arr) / sizeof(arr[0][0]);
	printf("输入要寻找的数字：");
	scanf("%d", &input);

	/*int i, j;
	for (i = 0; i <= 2; i++){
		for (j = 0; j <= 2; j++){
			if (arr[i][j] == input){
				printf("YES");
				system("pause");
				return 0;
			}
		}
	}
	printf("NO");*/   //时间复杂地 o^2(n)

	int row = 0;
	int col = 2;
	while ((col >= 0) && (row <= 2)){
		if (arr[row][col] == input){
			printf("YES");
			system("pause");
			return 0;
		}
		else if((arr[row][col])<input){
			row++;
		}
		else{
			col++;
		}
	}
	printf("NO");

	system("pause");
	return 0;
}
