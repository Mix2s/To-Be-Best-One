#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include "stdlib.h"
#include <math.h>
#define random(x)(rand()%x)

int main(){
	int j;
	int count=0;
	for (j = 1; j<= 100; j++){
		if ((j%10!=0)&&((j % 10) % 9 == 0)){
			printf("%d,  ", j);
			count++;
		}
	}
	printf("\n%d",count);
	system("pause");
	return 0;
}
int change(){
	//. 将数组A中的内容和数组B中的内容进行交换。（数组一样大） 
	int i, len;
	int a[10];
	int b[10];
	int temp;
	for (i = 0; i <= 9; i++){
		a[i] = random(100);
		b[i] = random(100);
		//初始化随机两个数组
	}
	len = sizeof(a) / sizeof(a[0]);
	printf("变化之前||||||||||\n");
	printf("数组A：");
	for (i = 0; i <= 9; i++){
		printf("%d,", a[i]);
	}
	printf("\n");
	printf("数组B：");
	for (i = 0; i <= 9; i++){
		printf("%d,", b[i]);
	}
	printf("\n变化之前||||||");


	for (i = 0; i <= len; i++){
		temp = a[i];
		a[i] = b[i];
		b[i] = temp;
	}
	printf("\n");
	printf("变化之后||||||||||\n");
	printf("数组A：");
	for (i = 0; i <= 9; i++){
		printf("%d,", a[i]);
	}
	printf("\n");
	printf("数组B：");
	for (i = 0; i <= 9; i++){
		printf("%d,", b[i]);
	}
	printf("\n变化之后||||||");//. 将数组A中的内容和数组B中的内容进行交换。（数组一样大） 
	int i, len;
	int a[10];
	int b[10];
	int temp;
	for (i = 0; i <= 9; i++){
		a[i] = random(100);
		b[i] = random(100);
		//初始化随机两个数组
	}
	len = sizeof(a) / sizeof(a[0]);
	printf("变化之前||||||||||\n");
	printf("数组A：");
	for (i = 0; i <= 9; i++){
		printf("%d,", a[i]);
	}
	printf("\n");
	printf("数组B：");
	for (i = 0; i <= 9; i++){
		printf("%d,", b[i]);
	}
	printf("\n变化之前||||||");


	for (i = 0; i <= len; i++){
		temp = a[i];
		a[i] = b[i];
		b[i] = temp;
	}
	printf("\n");
	printf("变化之后||||||||||\n");
	printf("数组A：");
	for (i = 0; i <= 9; i++){
		printf("%d,", a[i]);
	}
	printf("\n");
	printf("数组B：");
	for (i = 0; i <= 9; i++){
		printf("%d,", b[i]);
	}
	printf("\n变化之后||||||");
	return 0;
}
int total(){
	//计算1 / 1 - 1 / 2 + 1 / 3 - 1 / 4 + 1 / 5 …… + 1 / 99 - 1 / 100 的值。
	int i;
	float total = 0;
	printf("1 / 1 - 1 / 2 + 1 / 3 - 1 / 4 + 1 / 5 …… + 1 / 99 - 1 / 1001 / 1 - 1 / 2 + 1 / 3 - 1 / 4 + 1 / 5 …… + 1 / 99 - 1 / 100");
	for (i = 1; i <= 100; i++){
		total += pow(pow(-1, (i + 1))*i, -1);

	}
	printf("\n%.5f", total);
}
