#define _CRT_SECURE_NO_WARNINGS 1
#include "stdio.h"
#include "stdlib.h"
#include "time.h"
#define ROW 3
#define COL 3


char Chess[ROW][COL];
int init(){      //初始化 棋盘
					//将初始化的数组每个元素 变为' '(空格）
	int row, col;
	for (row = 0; row < ROW; row++){
		for (col = 0; col <COL; col++){
			Chess[row][col] == ' ';
		}
	}

}
void Meau(){
	printf("/////////////////////////\n");
	printf("///// 1.Play  0.exit/////\n");
	printf("/////////////////////////\n");
}
int print(){
	//TDDD
	int row;
	printf("-------------\n");
	for (row = 0; row <= ROW-1; row++){
		printf("| %c | %c | %c |\n",Chess[row][0],Chess[row][1],Chess[row][2]);
		printf("-------------\n");
	}
	
}

int Check(){
	int row, col;
	//判断行 胜利
	for (row = 0; row < ROW; row++){
		if (Chess[row][0] == Chess[row][1] == Chess[row][2]&&Chess[row][0]!=' '){
			return Chess[row][0];
		}
	}
	//判断 列胜利
	for (col = 0; row < COL; col++){
		if (Chess[0][col] == Chess[1][col] == Chess[2][col]&&Chess[0][col]!=' '){
			return Chess[0][col];
		}
	}
	//判断对角线胜利
	if (Chess[0][0] == Chess[1][1] == Chess[2][2] && Chess[0][0] != ' '){
		return Chess[0][0];
	}
	if (Chess[0][2] == Chess[1][1] == Chess[1][2] && Chess[0][0] != ' '){
		return Chess[0][2];
	}
	//无子可落时
	if (isFull()){
		return '---';
	}
	return 0;
}
int isFull(){
	int row, col;
	for (row = 0; row < ROW; row++){
		for (col = 0; col < COL; col++){
			if (Chess[row][col] == ' ')
				return 0;
		}
	}
	return 1;
}
int Computer_Move(){
	int row, col;
	while (1){
		row = rand() % ROW;
		col = rand() % COL;
		if (Chess[row][col] == ' '){
			Chess[row][col] = 'X';
		}
	}
	return 0;
}

int Player_Move(){
	int row, col;
	print();
	printf("请输入你的棋子坐标（row,col）:");
	while (1){
		scanf("%d %d",&row,&col);
		if (row >= 0 && row <= ROW || col >= 0 && col < COL){
			if (Chess[row][col] == ' '){
				Chess[row][col] = '0';
			}
			else{
				printf("该位置不能落子！！\n");
				printf("请重新落子：");
				continue;
			}
		}
		else{
			printf("该位置不能落子！！\n");
			printf("请重新落子：");
			continue;
		}
	}
}
int Verify(char win){ //胜利结果输出
	if (win == 'O'){
		printf("恭喜你获得胜利");
	}
	if (win == 'X'){
		printf("对战失败");
	}
	if (win == '---'){
		printf("和棋");
	}
}
void Player(){ //玩家先手
	char win = 0;
	while (1){
		Player_Move();
		print();
		win = Check();
		if (win != 0)
			break;
		Computer_Move();
		print();
		win = Check();
	}
	Verify(win);
}
void Computer(){

}
int Sub_Meau(){
	printf("///////////////////////////////\n");
	printf("///// 1.Player  0.computer/////\n");
	printf("///////////////////////////////\n");
}
void Play(){
	int in;
	printf("确定先手：\n");
	Sub_Meau();
	scanf("%d",&in);
	switch (in){
	case 1:
		Player();
		break;
	case 0:
			Computer();
			break;

	default:
		Player();
	}
	}
int main(){
	int input;
	init();
	Meau();  //初始开始菜单
	scanf("%d", &input);
		switch (input){
		case 1:
			srand((unsigned)time);
			Play();
			break;
		case 0:
			break;
		default:
			printf("重新输入");
		}
	system("pause");
	return 0;
}
