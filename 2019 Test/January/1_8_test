#define _CRT_SECURE_NO_WARNINGS 1
#include "stdio.h"
#include "stdlib.h"
int add(int a, int b){
	return a + b;
}
int sub(int a, int b){
	return a - b;
}
int mul(int a, int b){
	return a * b;
}
int Div(int a, int b){
	return a / b;
}
int int_cmp(const void *p1, const void *p2){
	return (*(int *)p1 > *(int *)p2);
}

void swap(void *p1, void *p2, int size){
	int i = 0;
	for (i = 0; i < size; i++){
		char tmp = *((char *)p2 + i);
		*((char *)p1 + i) = *((char *)p2 + i);
		*((char *)p2 + i) = tmp;
	}
}
void bubble(void *base, int count, int size, int(*com)(void *, void *)){
	int i = 0;
	int j = 0;
	for (i = 0; i < count - 1; i++){
		for (j = 0; j < count - i - 1; j++){
			if (com((char *)base + j*size, (char *)base + (j + 1)*size)>0){
				swap((char *)base + j*size, (char *)base + (j + 1)*size, size);
			}
		}
	}
}
int main(){
	int a[5][5];
	int(*p)[4];
	p = a;
	printf("a_ptr=%#p,p_ptr%#p\n", &a[4][2], &p[4][2]);
	printf("%p,%d\n", &p[4][2] - &a[4][2], &p[4][2] - &a[4][2]);
	//a_ptr=0X004FFED0,p_ptr0X004FFEC0
	//FFFFFFFC, -4

	int a[3][2] = { (0, 1), (2, 3), (4, 5) };
	int *p;
	p = a[0];
	printf("%d", p[0]);   // 1

	int a[4] = { 1, 2, 3, 4 };
	int *ptr1 = (int *)(&a + 1);
	int *ptr2 = (int *)((int)a + 1);
	printf("%x , %x", ptr1[-1], *ptr2);   //  4 , 2000000

	int a[5] = { 1, 2, 3, 4, 5 };
	int *ptr = (int *)(&a + 1);
	printf("%d %d", *(a + 1), *(ptr - 1));   // 2 5

	int arr[] = { 1, 3, 4, 5, 6, 6, 6, 88, 9 };
	int i = 0;
	bubble(arr, sizeof(arr) / sizeof(arr[0]), sizeof(int), int_cmp);
	for (i = 0; i < sizeof(arr) / sizeof(arr[0]); i++){
		printf("%d ", arr[i]);
	}
	printf("\n");

	int arr[] = { 1, 3, 4, 5, 6, 7, 8, 0 };
	int i = 0;
	qsort(arr, sizeof(arr) / sizeof(arr[0]), sizeof(int), int_cmp);
	for (i = 0; i < sizeof(arr) / sizeof(arr[0]); i++){
		printf("%d", arr[i]);
	}
	printf("\n");
	
	int x, y;
	int input = 1;
	int ret = 0;
	int(*p[5])(int x, int y) = { 0, add, sub, mul, Div };
	while (input){
		scanf("%d", &input);
		if (input == 4 && input >= 1){
			printf("输入：\n");
			scanf("%d %d", &x, &y);
			ret = (*p[input])(x, y);
		}
		
	}
	int x, y;
	int input;
	int ret = 0;
	while (1){
		printf("1,2,3,4");
		scanf("%d %d %d\n", &input,&x,&y);
		

		if (input == 1){
			add(x, y);
		}
		if (input == 2){
			sub(x, y);
		}
		if (input == 3){
			mul(x, y);
		}
		if (input == 4){
			Div(x, y);
		}
	}

	system("pause");
	return 0;
}
