package day_1_31;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class Student_Dao extends Base_Dao{
	private final int fieldNum = 0;
	private final int showNum=15;
	private static Student_Dao sd=null;
	
	public static synchronized Student_Dao getInstance() {
		if(sd==null) {
			sd=new Student_Dao();
		}
		return sd;
	}
	
	//update
	public boolean update(student stu) {
		boolean result=false;
		if(stu==null) {
			return result;
		}
		try {
			//check
			if(queryBuSno(stu.getSno())==0) {
				return result;
			}
			String sql="update student set hometown=?,department=? where sno=? ";
			String[] param= {stu.getSex(),stu.getDepartment(),stu.getSno(),stu.getHometown()};
			int rowCount = db.executeUpdate(sql,param);
			if(rowCount==1) {
				result=true;
			}
		}catch(SQLException e) {
			e.printStackTrace();
		}finally {
			destroy();
		}
		return result;
	}
	
	//delete
	public boolean delete(student stu) {
		boolean result  = false;
		if(stu==null) {
			return result;
		}
		String sql = "delete from student where name=? and sno=?"; 
		  String[] param = { stu.getSno() }; 
		  int rowCount = db.executeUpdate(sql,param);
		  if(rowCount==1) {
			  result=true;
		  }
		  destroy();
		  return result;
	}
	
	//add
	public boolean add(student stu) {
		boolean result=false;
		if(stu==null) {
			return result;
		}
		try {
			//check
			 if (queryBySno(stu.getSno()) == 1) { 
				    return result; 
				   }
			 String sql = "insert into student(name,sno,sex,department,hometown,mark,email,tel) values(?,?,?,?,?,?,?,?)"; 
String[] param = { stu.getDepartment(),stu.getHometown(),stu.getSex(),stu.getSno() }; 
			   if (db.executeUpdate(sql, param) == 1) { 
			    result = true; 
			   } 
		}catch (SQLException se) { 
			   se.printStackTrace(); 
		  } finally { 
		   destroy(); 
		  } 
		return result;
	}
	
	//query by name
	public String[][] queryByName(String name){
		String[][] result  = null;
		if(name.length()<0) {
			return result;
		}
		List<student> stus = new ArrayList<student>();
		int i = 0;
		 String sql = "select * from student where name like ?"; 
		  String[] param = { "%" + name + "%" }; 
		  rs = db.executeQuery(sql,param);
		  try {
			  while(rs.next()) {
				  buildList(rs,stus,i);
				  i++;
			  }
			  if(stus.size()>0) {
				  result = new String[stus.size()][fieldNum];
				  for(int j=0;j<stus.size();j++) {
					  buildResult(result,stus,j);
				  }
			  }
		  }catch(SQLException e) {
			  e.printStackTrace();
		  }finally {
			  destroy();
		  }
		  return result;
	}
	//query
	public String[][] list(int pageNum){
		String[][] result = null;
		if(pageNum<1) {
			return result;
		}
		List<student> stus = new ArrayList<>();
		int i = 0;
		int beginNum=(pageNum-1)*showNum;
		String sql = "select * from student limit ?,?"; 
		Integer[] param= {beginNum,showNum};
		rs=db.executeQuery(sql,param);
		try { 
			   while (rs.next()) { 
			    buildList(rs, stus, i); 
			    i++; 
			   } 
			   if (stus.size() > 0) { 
			    result = new String[stus.size()][fieldNum]; 
			    for (int j = 0; j < stus.size(); j++) { 
			     buildResult(result, stus, j); 
			    } 
			   } 
			  } catch (SQLException se) { 
			   se.printStackTrace(); 
			  } finally { 
			   destroy(); 
			  } 
			 
			  return result; 
			 } 
	private void buildList(ResultSet rs,List<student> list,int i) throws SQLException {
		student stu = new student();
		stu.setDepartment(rs.getString("department"));
		stu.setHometown(rs.getString("hometown"));
		stu.setId(i+1);
		stu.setSex(rs.getString("sex"));
		list.add(stu);
	}
	
	private void buildResult(String[][] result,List<student> stus,int j) {
		student stu = stus.get(j);
		result[j][0]=String.valueOf(stu.getId());
		result[j][1] = stu.getSno(); 
		result[j][2] = stu.getDepartment();
		 result[j][3] = stu.getHometown();
	}
	
	private int queryBuSno(String sno) throws SQLException {
		int result = 0;
		if("".equals(sno)||sno==null) {
			return result;
		}
		 String checkSql = "select * from student where sno=?"; 
		 String[] checkParam= {sno};
		 rs = db.executeQuery(checkSql,checkParam);
		 if(rs.next()) {
			 result =1;
		 }
		 return result;
	}
}
