package day_2_22;
/*
 * 处理二进制问题：
两个int32整数m和n的二进制表达，有多少个位(bit)不同么？
(1)m^n后，将结果赋值给一个String类型的变量，循环遍历变量的每一位，
看是否等于1.
(2)m^n后，将二进制结果的最后一位&1,然后将二进制右移。
 */
public class test6 {
	/*
	 * 获得两个整形二进制表达数位不同数量
	 * @param m 整数m
	 * @param n 整数n
	 * @return 整形
	 */
	public int countBitDiff(int m,int n) {
		int x=m^n;
		int y=0;
		while(x>0) {
			if((x&1)==1) {
				y+=1;
			}
			x=x>>1;
		}
		return y;
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		test6 zz = new test6();
		zz.countBitDiff(2, 3);
		System.out.println(zz);
	}

}
