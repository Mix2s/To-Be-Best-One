/*
	Title Description

Determine the prime number within 100-200

Implementation optimization
*/

#define _CRT_SECURE_NO_WARNINGS 1

#include "stdio.h"
#include "stdlib.h"
#include "math.h"
int main(){

	int i=0;
	int j=0;
	for (i = 100; i <= 200; i++){
		int count = 0; //local variable
		for (j = 2; j < i; j++){
			if (i%j == 0){
				count++;
				break;
			}
		}
		if (count == 0){
			printf("该%d为素数\n",i);
		}
	}
	//for (i = 100; i <= 200; i++)
	//{          //Determine whether I is prime.
	//	for (j = 2; j <= sqrt(i); j++)    //Analogous to area must find effective sides.
	//	{   //for(j=101;j<=i-1;j+=2)  Judge only odd numbers.
	//		//for(j=2;j<=i-1;j++)      Efficiency is low. List all the comparisons.
	//		//Judge the prime number between 2 and N-1
	//		if (i % j == 0)
	//		{//J最大为n-1
	//			break;
	//		}
	//	}
	//if (j>sqrt(i))  
	//	//（j==i） 相等

	//	{//If i=j is not divisible by any J,
	//		printf("%d\n", i);
	//	}
	//}
	
	system("pause");
	printf("END");
	return 0;
}



/*
	Title Description

Output multiplication table
*/

#define _CRT_SECURE_NO_WARNINGS 1
#include "stdio.h"
#include "stdlib.h"

int main(){
	int i=0;
	int j = 0;
	short max = 0;
	for (i = 1; i <= 9; i++){           //i控制行 j控制了列
		for (j = 1; j<=i; j++){
			max = i*j;
			printf("%d*%d=%d\t", i, j, max);
		}
		printf("\n");
	}
	
	system("pause");
}


/*
	
题目描述
判断年份是否为闰年

Title Description

Determine whether the year is leap year.

*/
#define _CRT_SECURE_NO_WARNINGS 1
#include "stdio.h"
#include "stdlib.h"
int main(){
	//The leap year can be divisible by 4. It can not be divisible by 100 and can be divided by 400.

	int year = 0;
	scanf("%d", &year);
	if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0))
	{
		printf("%d为闰年", year);
	}
	system("pause");
	return 0;
}
